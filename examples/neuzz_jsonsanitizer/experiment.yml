fuzzer:
  cls: NeuzzFuzzer
  jazzer_cmd: [ '../../bin/jazzer/jazzer', '--keep-going=100000' ]
  max_input_len: 2000 # 20 kB
  initial_dataset_len: 10000
  n_mutation_candidates: 2
  network: [ 512 ] # [64,64]
  epochs: 20

dispatcher:
  # dispatches libfuzzer command and handles communication of new fuzzing files
  # and fuzz results to and from the libfuzzer command
  type: SocketMulti
  # binary created using "./bazelisk-linux-amd64 build //:jazzer_release" in https://github.com/fmeum/jazzer-oracle
  jazzer_cmd: [ '../../bin/jazzer/jazzer', '-oracle=1', '--keep-going=100000', '-timeout=0' ]
  addr: '/tmp/libfuzzer.sock'
  mut_reps: 0


obs_transformation:
  - type: SocketCovArray

runner:
  limit: 1000000
  fuzz_target: [ '--cp=examples_deploy.jar', '--target_class=com.example.JsonSanitizerDenylistFuzzer' ]
#  dataset_file_prefix: dataset
